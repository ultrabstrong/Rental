@using Rental.WebApp.Controllers
@using Rental.WebApp.Enums
@using Rental.WebApp.Models.Application
@model Application
@{ Layout = null; }

<div class="container pdf-container">
    <!-- PDF Header -->
    <div class="text-center mb-4 border-bottom">
        <h2>Rental Application</h2>
        <p>@DateTime.Now.ToShortDateString()</p>
    </div>

    <!-- Basic Application Info -->
    <div class="mb-4 avoid-break">
        <div class="row">
            <div class="col-12">
                <h3>@Html.DisplayNameFor(m => m.RentalAddress)</h3>
                <span class="answer-box">@Model.RentalAddress</span>

                <h3>Co-applicants</h3>
                <span class="answer-box">@Model.OtherApplicants</span>
            </div>
        </div>
    </div>

    <!-- Personal Information Section -->
    <div class="mb-4 avoid-break">
        <div class="bg-light p-2 mb-3 border-start">
            <h3 class="m-0">Applicant Information</h3>
        </div>
        <div class="row">
            <div class="col-6">
                <p>@Html.DisplayNameFor(m => m.PersonalInfo.FirstName)</p>
                <span class="answer-box">@Model.PersonalInfo.FirstName</span>
                
                <p>@Html.DisplayNameFor(m => m.PersonalInfo.MiddleName)</p>
                <span class="answer-box">@Model.PersonalInfo.MiddleName</span>
                
                <p>@Html.DisplayNameFor(m => m.PersonalInfo.LastName)</p>
                <span class="answer-box">@Model.PersonalInfo.LastName</span>
                
                <p>@Html.DisplayNameFor(m => m.PersonalInfo.PhoneNum)</p>
                <span class="answer-box">@Model.PersonalInfo.PhoneNum</span>
            </div>
            <div class="col-6">
                <p>@Html.DisplayNameFor(m => m.PersonalInfo.DriverLicense)</p>
                <span class="answer-box">@Model.PersonalInfo.DriverLicense</span>
                
                <p>@Html.DisplayNameFor(m => m.PersonalInfo.DriverLicenseStateOfIssue)</p>
                <span class="answer-box">@Model.PersonalInfo.DriverLicenseStateOfIssue</span>
                
                <p>@Html.DisplayNameFor(m => m.PersonalInfo.SSN)</p>
                <span class="answer-box">@Model.PersonalInfo.SSN</span>
                
                <p>@Html.DisplayNameFor(m => m.PersonalInfo.Email)</p>
                <span class="answer-box">@Model.PersonalInfo.Email</span>
            </div>
        </div>
    </div>

    <!-- Current Address Section -->
    <div class="mb-4 avoid-break">
        <div class="bg-light p-2 mb-3 border-start">
            <h3 class="m-0">Current Address</h3>
        </div>
        <div class="row">
            <div class="col-6">
                <p>@Html.DisplayNameFor(m => m.CurrentRental.Street)</p>
                <span class="answer-box">@Model.CurrentRental.Street</span>

                <p>@Html.DisplayNameFor(m => m.CurrentRental.State)</p>
                <span class="answer-box">@Model.CurrentRental.State</span>

                <p>@Html.DisplayNameFor(m => m.CurrentRental.Start)</p>
                <span class="answer-box">@(Model.CurrentRental.Start?.ToShortDateString() ?? "")</span>

                <p>@Html.DisplayNameFor(m => m.CurrentRental.LandlordName)</p>
                <span class="answer-box">@Model.CurrentRental.LandlordName</span>
            </div>
            <div class="col-6">
                <p>@Html.DisplayNameFor(m => m.CurrentRental.City)</p>
                <span class="answer-box">@Model.CurrentRental.City</span>

                <p>@Html.DisplayNameFor(m => m.CurrentRental.Zip)</p>
                <span class="answer-box">@Model.CurrentRental.Zip</span>

                <p> @Html.DisplayNameFor(m => m.CurrentRental.End)</p>
                <span class="answer-box">@(Model.CurrentRental.End?.ToShortDateString() ?? "")</span>

                <p>@Html.DisplayNameFor(m => m.CurrentRental.LandlordPhoneNum)</p>
                <span class="answer-box">@Model.CurrentRental.LandlordPhoneNum</span>
            </div>
        </div>
        <div class="row">
            <div class="col-12">
                <p>@Html.DisplayNameFor(m => m.CurrentRental.ReasonForMoving)</p>
                <div class="answer-box">@Model.CurrentRental.ReasonForMoving</div>
            </div>
        </div>
    </div>

    <!-- Primary Employment Section -->
    <div class="mb-4 avoid-break">
        <div class="bg-light p-2 mb-3 border-start">
            <h3 class="m-0">Primary Employment</h3>
        </div>
        <div class="row">
            @if (Model.PrimaryEmployment.ElectiveRequireValue == YesNo.Yes)
            {
                <div class="col-6">
                    <p>@Html.DisplayNameFor(m => m.PrimaryEmployment.Company)</p>
                    <span class="answer-box">@Model.PrimaryEmployment.Company</span>

                    <p>@Html.DisplayNameFor(m => m.PrimaryEmployment.EmploymentLength)</p>
                    <span class="answer-box">@Model.PrimaryEmployment.EmploymentLength</span>

                    <p>@Html.DisplayNameFor(m => m.PrimaryEmployment.WageType)</p>
                    <span class="answer-box">@Model.PrimaryEmployment.WageType</span>

                    <p>@Html.DisplayNameFor(m => m.PrimaryEmployment.ContactName)</p>
                    <span class="answer-box">@Model.PrimaryEmployment.ContactName</span>
                </div>
                <div class="col-6">
                    <p>@Html.DisplayNameFor(m => m.PrimaryEmployment.IsPermenant)</p>
                    <span class="answer-box">@Model.PrimaryEmployment.IsPermenant</span>

                    <p>@Html.DisplayNameFor(m => m.PrimaryEmployment.HoursPerWeek)</p>
                    <span class="answer-box">@Model.PrimaryEmployment.HoursPerWeek</span>

                    <p>@Html.DisplayNameFor(m => m.PrimaryEmployment.Wage)</p>
                    <span class="answer-box">$@Model.PrimaryEmployment.Wage</span>

                    <p>@Html.DisplayNameFor(m => m.PrimaryEmployment.ContactPhone)</p>
                    <span class="answer-box">@Model.PrimaryEmployment.ContactPhone</span>
                </div>
            }
            else
            {
                <div class="col-12">
                    <p>Applicant is not currently employed.</p>
                </div>
            }
        </div>
    </div>

    <!-- Secondary Employment Section -->
    <div class="mb-4 avoid-break">
        <div class="bg-light p-2 mb-3 border-start">
            <h3 class="m-0">Secondary Employment</h3>
        </div>        
        @if (Model.SecondaryEmployment.ElectiveRequireValue == YesNo.Yes)
        {
            <div class="row">
                <div class="col-6">
                    <p>@Html.DisplayNameFor(m => m.SecondaryEmployment.Company)</p>
                    <span class="answer-box">@Model.SecondaryEmployment.Company</span>

                    <p>@Html.DisplayNameFor(m => m.SecondaryEmployment.EmploymentLength)</p>
                    <span class="answer-box">@Model.SecondaryEmployment.EmploymentLength</span>

                    <p>@Html.DisplayNameFor(m => m.SecondaryEmployment.WageType)</p>
                    <span class="answer-box">@Model.SecondaryEmployment.WageType</span>
                    
                    <p>@Html.DisplayNameFor(m => m.SecondaryEmployment.ContactName)</p>
                    <span class="answer-box">@Model.SecondaryEmployment.ContactName</span>
                </div>
                <div class="col-6">
                    <p>@Html.DisplayNameFor(m => m.SecondaryEmployment.IsPermenant)</p>
                    <span class="answer-box">@Model.SecondaryEmployment.IsPermenant</span>

                    <p>@Html.DisplayNameFor(m => m.SecondaryEmployment.HoursPerWeek)</p>
                    <span class="answer-box">@Model.SecondaryEmployment.HoursPerWeek</span>

                    <p>@Html.DisplayNameFor(m => m.SecondaryEmployment.Wage)</p>
                    <span class="answer-box">$@Model.SecondaryEmployment.Wage</span>

                    <p>@Html.DisplayNameFor(m => m.SecondaryEmployment.ContactPhone)</p>
                    <span class="answer-box">@Model.SecondaryEmployment.ContactPhone</span>
                </div>
            </div>
        }
        else
        {
            <div class="row">
                <div class="col-12">
                    <p>No secondary employment information provided.</p>
                </div>
            </div>
        }
    </div>

    <!-- Parent Info -->
    <div class="mb-4 avoid-break">
        <div class="bg-light p-2 mb-3 border-start">
            <h3 class="m-0">Parent Information</h3>
        </div>        
        @if (Model.ParentInfo.ElectiveRequireValue == YesNo.Yes)
        {
            <div class="row">
                <div class="col-6">
                    <p>Parent Name <span class="answer-box">@Model.ParentInfo.FirstName @Model.ParentInfo.MiddleName @Model.ParentInfo.LastName</span></p>
                    <p>@Html.DisplayNameFor(m => m.ParentInfo.Street) <span class="answer-box">@Model.ParentInfo.Street</span></p>
                    <p>@Html.DisplayNameFor(m => m.ParentInfo.State) <span class="answer-box">@Model.ParentInfo.State</span></p>
                </div>
                <div class="col-6">
                    <p>@Html.DisplayNameFor(m => m.ParentInfo.PhoneNum) <span class="answer-box">@Model.ParentInfo.PhoneNum</span></p>
                    <p>@Html.DisplayNameFor(m => m.ParentInfo.City) <span class="answer-box">@Model.ParentInfo.City</span></p>
                    <p>@Html.DisplayNameFor(m => m.ParentInfo.Zip) <span class="answer-box">@Model.ParentInfo.Zip</span></p>
                </div>
            </div>
        }
        else
        {
            <div class="row">
                <div class="col-12">
                    <p>Parents do not contribute to rent payment.</p>
                </div>
            </div>
        }
    </div>

    <!-- Automobile -->
    <div class="mb-4 avoid-break">
        <div class="bg-light p-2 mb-3 border-start">
            <h3 class="m-0">@Model.Automobile.DisplayName</h3>
        </div>
        @if (Model.Automobile.ElectiveRequireValue == YesNo.Yes)
        {
            <div class="row">
                <div class="col-6">
                    <p>@Html.DisplayNameFor(m => m.Automobile.Make) <span class="answer-box">@Model.Automobile.Make</span></p>
                    <p>@Html.DisplayNameFor(m => m.Automobile.Color) <span class="answer-box">@Model.Automobile.Color</span></p>
                    <p>@Html.DisplayNameFor(m => m.Automobile.LicenseNum) <span class="answer-box">@Model.Automobile.LicenseNum</span></p>
                </div>
                <div class="col-6">
                    <p>@Html.DisplayNameFor(m => m.Automobile.Model) <span class="answer-box">@Model.Automobile.Model</span></p>
                    <p>@Html.DisplayNameFor(m => m.Automobile.Year) <span class="answer-box">@Model.Automobile.Year</span></p>
                    <p>@Html.DisplayNameFor(m => m.Automobile.State) <span class="answer-box">@Model.Automobile.State</span></p>
                </div>
            </div>
        }
        else
        {
            <div class="row">
                <div class="col-12">
                    <p>Applicant does not own a vehicle.</p>
                </div>
            </div>
        }
    </div>

    <!-- Prior rental reference -->
    <div class="mb-4 avoid-break">
        <div class="bg-light p-2 mb-3 border-start">
            <h3 class="m-0">@Model.PriorRentRef1.DisplayName</h3>
        </div>
        <div class="row">
            @if (Model.PriorRentRef1.ElectiveRequireValue == YesNo.Yes)
            {
                <div class="row">
                    <div class="col-6">
                        <p>@Html.DisplayNameFor(m => m.PriorRentRef1.Street) <span class="answer-box">@Model.PriorRentRef1.Street</span></p>
                        <p>@Html.DisplayNameFor(m => m.PriorRentRef1.State) <span class="answer-box">@Model.PriorRentRef1.State</span></p>
                        <p>@Html.DisplayNameFor(m => m.PriorRentRef1.Start) <span class="answer-box">@(Model.PriorRentRef1.Start?.ToShortDateString() ?? "")</span></p>
                        <p>@Html.DisplayNameFor(m => m.PriorRentRef1.LandlordName) <span class="answer-box">@Model.PriorRentRef1.LandlordName</span></p>
                    </div>
                    <div class="col-6">
                        <p>@Html.DisplayNameFor(m => m.PriorRentRef1.City) <span class="answer-box">@Model.PriorRentRef1.City</span></p>
                        <p>@Html.DisplayNameFor(m => m.PriorRentRef1.Zip) <span class="answer-box">@Model.PriorRentRef1.Zip</span></p>
                        <p>@Html.DisplayNameFor(m => m.PriorRentRef1.End) <span class="answer-box">@(Model.PriorRentRef1.End?.ToShortDateString() ?? "")</span></p>
                        <p>@Html.DisplayNameFor(m => m.PriorRentRef1.LandlordPhoneNum) <span class="answer-box">@Model.PriorRentRef1.LandlordPhoneNum</span></p>
                    </div>
                </div>                
                <div class="row">
                    <div class="col-12">
                        <p>@Html.DisplayNameFor(m => m.PriorRentRef1.ReasonForMoving)</p>
                        <div class="answer-box">@Model.PriorRentRef1.ReasonForMoving</div>
                    </div>
                </div>
            }
            else
            {
                <div class="row">
                    <div class="col-12">
                        <p>Previous rental reference not provided</p>
                    </div>
                </div>
            }
            
        </div>
    </div>

    <!-- Personal References -->
    <div class="mb-4 avoid-break">
        <div class="bg-light p-2 mb-3 border-start">
            <h3 class="m-0">Personal References</h3>
        </div>
        
        <!-- Reference #1 -->
        <div class="mb-3">
            <h4 class="mb-3 border-bottom">@Model.PersonalReference1.DisplayName</h4>
            @if (Model.PersonalReference1.ElectiveRequireValue == YesNo.Yes)
            {
                <div class="row">
                    <div class="col-12">
                        <p>@Html.DisplayNameFor(m => m.PersonalReference1.Name) <span class="answer-box">@Model.PersonalReference1.Name</span></p>
                        <p>@Html.DisplayNameFor(m => m.PersonalReference1.Relationship) <span class="answer-box">@Model.PersonalReference1.Relationship</span></p>
                        <p>@Html.DisplayNameFor(m => m.PersonalReference1.PhoneNum) <span class="answer-box">@Model.PersonalReference1.PhoneNum</span></p>
                    </div>
                </div>
            }
            else
            {
                <div class="row">
                    <div class="col-12">
                        <p>No personal reference provided.</p>
                    </div>
                </div>
            }
        </div>
        
        <!-- Reference #2 -->
        <div>
            <h4 class="mb-3 border-bottom">@Model.PersonalReference2.DisplayName</h4>
            @if (Model.PersonalReference2.ElectiveRequireValue == YesNo.Yes)
            {
                <div class="row">
                    <div class="col-12">
                        <p>@Html.DisplayNameFor(m => m.PersonalReference2.Name) <span class="answer-box">@Model.PersonalReference2.Name</span></p>
                        <p>@Html.DisplayNameFor(m => m.PersonalReference2.Relationship) <span class="answer-box">@Model.PersonalReference2.Relationship</span></p>
                        <p>@Html.DisplayNameFor(m => m.PersonalReference2.PhoneNum) <span class="answer-box">@Model.PersonalReference2.PhoneNum</span></p>
                    </div>
                </div>
            }
            else
            {
                <div class="row">
                    <div class="col-12">
                        <p>No second personal reference provided.</p>
                    </div>
                </div>
            }
        </div>
    </div>

    <!-- Additional Information -->
    <div class="mb-4 avoid-break">
        <div class="bg-light p-2 mb-3 border-start">
            <h3 class="m-0">Additional Information</h3>
        </div>
        
        <div class="row mb-3">
            <div class="col-12">
                <p>@Html.DisplayNameFor(m => m.AnticipatedDuration) <span class="answer-box">@Model.AnticipatedDuration</span></p>
                <p>@Html.DisplayNameFor(m => m.HasCriminalRecord) <span class="answer-box">@Model.HasCriminalRecord</span></p>
                @if (Model.HasCriminalRecord == YesNo.Yes)
                {
                    <p class="elective-answer border-start-small">@Html.DisplayNameFor(m => m.ExplainCriminalRecord) <span class="answer-box">@Model.ExplainCriminalRecord</span></p>
                }
                <p>@Html.DisplayNameFor(m => m.HasBeenEvicted) <span class="answer-box">@Model.HasBeenEvicted</span></p>
                @if (Model.HasBeenEvicted == YesNo.Yes)
                {
                    <p class="elective-answer border-start-small">@Html.DisplayNameFor(m => m.ExplainBeenEvicted) <span class="answer-box">@Model.ExplainBeenEvicted</span></p>
                }
                <p>@Html.DisplayNameFor(m => m.MarijuanaCard) <span class="answer-box">@Model.MarijuanaCard</span></p>
                <p>@Html.DisplayNameFor(m => m.Smokers) <span class="answer-box">@Model.Smokers</span></p>
                @if (Model.Smokers == YesNo.Yes)
                {
                    <p class="elective-answer border-start-small">@Html.DisplayNameFor(m => m.SmokersCount) <span class="answer-box">@Model.SmokersCount</span></p>
                }
                <p>@Html.DisplayNameFor(m => m.Drinkers) <span class="answer-box">@Model.Drinkers</span></p>
                @if (Model.Drinkers == YesNo.Yes)
                {
                    <p class="elective-answer border-start-small">@Html.DisplayNameFor(m => m.HowOftenDrink) <span class="answer-box">@Model.HowOftenDrink</span></p>
                }
                <p>@Html.DisplayNameFor(m => m.AnyPets) <span class="answer-box">@Model.AnyPets</span></p>
                @if (Model.AnyPets == YesNo.Yes)
                {
                    <p class="elective-answer border-start-small">@Html.DisplayNameFor(m => m.DescribePets) <span class="answer-box">@Model.DescribePets</span></p>
                }
                <p>@Html.DisplayNameFor(m => m.AnyNonHuman) <span class="answer-box">@Model.AnyNonHuman</span></p>
                @if (Model.AnyNonHuman == YesNo.Yes)
                {
                    <p class="elective-answer border-start-small">@Html.DisplayNameFor(m => m.DescribeNonHuman) <span class="answer-box">@Model.DescribeNonHuman</span></p>
                }
                <p>@Html.DisplayNameFor(m => m.AttendCollege) <span class="answer-box">@Model.AttendCollege</span></p>
                @if (Model.AttendCollege == YesNo.Yes)
                {
                    <p class="elective-answer border-start-small">@Html.DisplayNameFor(m => m.CollegeYearsAttended) <span class="answer-box">@Model.CollegeYearsAttended</span></p>
                    <p class="elective-answer border-start-small">@Html.DisplayNameFor(m => m.PlanToGraduate) <span class="answer-box">@Model.PlanToGraduate</span></p>
                }
                <p>@Html.DisplayNameFor(m => m.NeedReasonableAccommodation) <span class="answer-box">@Model.NeedReasonableAccommodation</span></p>
                @if (Model.NeedReasonableAccommodation == YesNo.Yes)
                {
                    <p class="elective-answer border-start-small">@Html.DisplayNameFor(m => m.DescribeReasonableAccommodation) <span class="answer-box">@Model.DescribeReasonableAccommodation</span></p>
                }
                <p>@Html.DisplayNameFor(m => m.ConsiderOtherIncome) <span class="answer-box">@Model.ConsiderOtherIncome</span></p>
                @if (Model.ConsiderOtherIncome == YesNo.Yes)
                {
                    <p class="elective-answer border-start-small">@Html.DisplayNameFor(m => m.OtherIncomeExplain) <span class="answer-box">@Model.OtherIncomeExplain</span></p>
                }
            </div>
        </div>
        
        <div class="row">
            <div class="col-12">
                <h4 class="mb-3 border-bottom">@Html.DisplayNameFor(m => m.AdditionalComments)</h4>
                <p class="answer-box">@Model.AdditionalComments</p>
            </div>
        </div>
    </div>

    <!-- Certification -->
    <div class="mb-4 avoid-break">
        <div class="bg-light p-2 mb-3 border-start">
            <h3 class="m-0">Certification and Authorization</h3>
        </div>
        <div class="row">
            <div class="col-12">
                <p>I (we), @Model.PersonalInfo.FirstName @Model.PersonalInfo.LastName, certify that the statements contained herein are true and correct. Misrepresentations contained herein shall constitute grounds for lease revocation. I hereby verify that I am old enough to legally sign and be fully responsible for the terms of the Lease Agreement. Each applicant hereby authorizes the Landlord or rental agent and their representative to contact any persons, corporations, employers, agencies, offices, groups or organizations to obtain any information and material which is deemed necessary to verify the information in this application. In the event the application is approved and I/We desire to lease the premises, each applicant agrees to fill out, sign, and abide by the rental/lease agreement. Each applicant understands and agrees that all adults whom reside on the premises shall be jointly-severally liable for all rent and damage incurred during the term of the Lease Agreement.</p>
                <p>@Html.DisplayNameFor(m => m.CertificationAndAuthorization) <span class="answer-box">@Model.CertificationAndAuthorization</span></p>
            </div>
        </div>
    </div>
</div>

<style>
    /* PDF-specific styles that don't depend on Bootstrap */
    .avoid-break {
        page-break-inside: avoid;
    }
    
    /* Base styles for the PDF */
    .pdf-container {
        font-size: 12pt;
        line-height: 1.5;
        font-family: Arial, Helvetica, sans-serif;
    }
    
    /* Row and column layout */
    .row {
        display: table;
        width: 100%;
        clear: both;
        margin-bottom: 15px;
    }
    
    .col-6 {
        display: table-cell;
        width: 50%;
        padding: 0 10px;
        vertical-align: top;
    }
    
    .col-12 {
        
        padding: 0 10px;
    }
    
    /* Header styling */
    .bg-light {
        background-color: #f8f9fa;
        padding: 8px;
        margin-bottom: 15px;
    }
    
    .border-start {
        border-left: 4px solid #0d6efd;
    }

    .border-start-small {
        border-left: 2px solid #0d6efd;
    }
    
    .border-bottom {
        border-bottom: 1px solid #dee2e6;
    }
    
    h3, h4 {
        margin: 0;
        font-weight: bold;
    }
    
    /* Text styling */
    p {
        margin: 6px 0;
        font-size: 12pt;
    }
    
    /* Textbox-like styling for answers */
    .answer-box {
        display: block;
        background-color: #f5f5f5;
        border: 1px solid #000;
        border-radius: 4px;
        padding: 4px 8px;
        margin-top: 4px;
        margin-bottom: 10px;
        min-width: 60px;
        min-height: 24px;
        font-size: 12pt;
    }
    
    .elective-answer {
        margin-left: 20px;
        padding-left: 10px;
    }

    .text-center {
        text-align: center;
    }
    
    .mb-3 {
        margin-bottom: 12px;
    }
    
    .mb-4 {
        margin-bottom: 16px;
    }
    
</style>