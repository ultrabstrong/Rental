@using Rental.WebApp.Controllers
@using Rental.WebApp.Enums;
@using Rental.WebApp.Models.Application
@model Application

<div class="container px-0 mt-4">
    <div class="row justify-content-center">
        <div class="col-lg-10">
            <!-- Application Form Card -->
            <div class="card border-0 shadow overflow-hidden">
                <!-- Application Header -->
                <div class="card-header bg-primary-subtle p-4 border-0">
                    <div class="d-flex align-items-center">
                        <i class="bi bi-file-text fs-2 text-primary me-3"></i>
                        <h3 class="mb-0 text-dark">Rental Application</h3>
                    </div>
                </div>

                <!-- Application Body -->
                <div class="card-body p-4 p-lg-5">
                    @using (Html.BeginForm(nameof(ApplicationController.SubmitApplication), ApplicationController.Name, FormMethod.Post, new { @id = "application-form", @class = "needs-validation" }))
                    {
                        @Html.AntiForgeryToken()

                        <!-- Display errors -->
                        if (ViewBag.Errors == true)
                        {
                            <div class="alert alert-danger mb-4">
                                <h6 class="mb-2">Please resolve the following errors</h6>
                                @Html.ValidationSummary(false)
                            </div>
                            ViewBag.Errors = false;
                        }

                        <!-- Rental Address -->
                        <div class="mb-4">
                            @Html.LabelFor(model => model.RentalAddress, new { @class = "form-label fw-bold text-dark" })
                            @Html.EditorFor(model => model.RentalAddress, new { htmlAttributes = new { @class = "form-control form-control-lg" } })
                            @Html.ValidationMessageFor(model => model.RentalAddress, "", new { @class = "text-danger mt-1" })
                        </div>

                        <!-- Other Applicant -->
                        <div class="mb-4">
                            @Html.LabelFor(model => model.OtherApplicants, new { @class = "form-label fw-bold text-dark" })
                            @Html.EditorFor(model => model.OtherApplicants, new { htmlAttributes = new { @class = "form-control form-control-lg" } })
                            @Html.ValidationMessageFor(model => model.OtherApplicants, "", new { @class = "text-danger mt-1" })
                        </div>

                        <!-- Personal Info Section -->
                        <div class="card mb-4">
                            <div class="card-header bg-light py-3">
                                <h5 class="mb-0">Personal Information</h5>
                            </div>
                            <div class="card-body pt-4">
                                @Html.EditorFor(model => model.PersonalInfo)
                            </div>
                        </div>

                        <!-- Current Rental -->
                        <div class="card mb-4">
                            <div class="card-header bg-light py-3">
                                <h5 class="mb-0">Current Address</h5>
                            </div>
                            <div class="card-body pt-4">
                                @Html.EditorFor(model => model.CurrentRental)
                            </div>
                        </div>

                        <!-- Employment Sections -->
                        <div class="card mb-4">
                            <div class="card-header bg-light py-3">
                                <h5 class="mb-0">Primary Employment</h5>
                            </div>
                            <div class="card-body pt-4">
                                @Html.EditorFor(model => model.PrimaryEmployment)
                            </div>
                        </div>

                        <div class="card mb-4">
                            <div class="card-header bg-light py-3">
                                <h5 class="mb-0">Secondary Employment (if applicable)</h5>
                            </div>
                            <div class="card-body pt-4">
                                @Html.EditorFor(model => model.SecondaryEmployment)
                            </div>
                        </div>

                        <!-- Parent Info -->
                        <div class="card mb-4">
                            <div class="card-header bg-light py-3">
                                <h5 class="mb-0">Parent Information</h5>
                            </div>
                            <div class="card-body pt-4">
                                @Html.EditorFor(model => model.ParentInfo)
                            </div>
                        </div>

                        <!-- Automobile -->
                        <div class="card mb-4">
                            <div class="card-header bg-light py-3">
                                <h5 class="mb-0">Automobile Information</h5>
                            </div>
                            <div class="card-body pt-4">
                                @Html.EditorFor(model => model.Automobile)
                            </div>
                        </div>

                        <!-- Prior rental reference 1 -->
                        <div class="card mb-4">
                            <div class="card-header bg-light py-3">
                                <h5 class="mb-0">Prior Rental Reference</h5>
                            </div>
                            <div class="card-body pt-4">
                                @Html.EditorFor(model => model.PriorRentRef1)
                            </div>
                        </div>

                        <!-- Personal References -->
                        <div class="card mb-4">
                            <div class="card-header bg-light py-3">
                                <h5 class="mb-0">Personal References</h5>
                            </div>
                            <div class="card-body pt-4">
                                <!-- Personal Reference 1 -->
                                <div class="mb-4">
                                    <h5 class="mb-3">Reference #1</h5>
                                    @Html.EditorFor(model => model.PersonalReference1)
                                </div>

                                <!-- Personal Reference 2 -->
                                <div>
                                    <h5 class="mb-3">Reference #2</h5>
                                    @Html.EditorFor(model => model.PersonalReference2)
                                </div>
                            </div>
                        </div>

                        <!-- Additional Information Card -->
                        <div class="card mb-4">
                            <div class="card-header bg-light py-3">
                                <h5 class="mb-0">Additional Information</h5>
                            </div>
                            <div class="card-body pt-4">
                                <!-- Anticipated Duration -->
                                <div class="row mb-4">
                                    @Html.LabelFor(model => model.AnticipatedDuration, new { @class = "col-md-12 form-label fw-bold text-dark" })
                                    <div class="col-md-12">
                                        <div class="d-flex align-items-center">
                                            <i class="bi bi-arrow-return-right text-primary me-2"></i>
                                            @Html.EditorFor(model => model.AnticipatedDuration, new { htmlAttributes = new { @class = "form-control form-control-lg" } })
                                        </div>
                                        <div class="ps-4">
                                            @Html.ValidationMessageFor(model => model.AnticipatedDuration, "", new { @class = "text-danger mt-1 d-block" })
                                        </div>
                                    </div>
                                </div>

                                <!-- Has Criminal Record -->
                                <div class="mb-4 criminal-record-section">
                                    <div class="row mb-3 align-items-center">
                                        <div class="col-md-9">
                                            @Html.LabelFor(model => model.HasCriminalRecord, new { @class = "form-label fw-bold text-dark" })
                                            @Html.ValidationMessageFor(model => model.HasCriminalRecord, "", new { @class = "text-danger d-block mt-1" })
                                        </div>
                                        <div class="col-md-3">
                                            @Html.DropDownListFor(model => model.HasCriminalRecord, Html.GetEnumSelectList<YesNo>(), "-", new { @visibletogglefor = nameof(Model.HasCriminalRecord), @class = "yesno_visible_toggle form-control form-control-lg" })
                                        </div>
                                    </div>

                                    <div id="@nameof(Model.HasCriminalRecord)" @(Model.HasCriminalRecord == YesNo.Yes ? "" : "style=display:none;") class="criminal-details ms-4 ps-3 border-start border-primary">
                                        <div class="mb-2">
                                            <div class="d-flex align-items-center mb-2">
                                                <i class="bi bi-arrow-return-right text-primary me-2"></i>
                                                @Html.LabelFor(model => model.ExplainCriminalRecord, new { @class = "form-label fw-bold mb-0 text-dark" })
                                            </div>
                                            @Html.EditorFor(model => model.ExplainCriminalRecord, new { htmlAttributes = new { @class = "form-control form-control-lg" } })
                                            @Html.ValidationMessageFor(model => model.ExplainCriminalRecord, "", new { @class = "text-danger mt-1" })
                                        </div>
                                    </div>
                                </div>

                                <!-- Has Been Evicted -->
                                <div class="mb-4 eviction-section">
                                    <!-- Eviction question header -->
                                    <div class="row mb-3 align-items-center">
                                        <div class="col-md-9">
                                            @Html.LabelFor(model => model.HasBeenEvicted, new { @class = "form-label fw-bold text-dark" })
                                            @Html.ValidationMessageFor(model => model.HasBeenEvicted, "", new { @class = "text-danger d-block mt-1" })
                                        </div>
                                        <div class="col-md-3">
                                            @Html.DropDownListFor(model => model.HasBeenEvicted, Html.GetEnumSelectList<YesNo>(), "-", new { @visibletogglefor = nameof(Model.HasBeenEvicted), @class = "yesno_visible_toggle form-control form-control-lg" })
                                        </div>
                                    </div>

                                    <!-- Eviction -->
                                    <div id="@nameof(Model.HasBeenEvicted)" @(Model.HasBeenEvicted == YesNo.Yes ? "" : "style=display:none;") class="eviction-details ms-4 ps-3 border-start border-primary">
                                        <div class="mb-2">
                                            <div class="d-flex align-items-center mb-2">
                                                <i class="bi bi-arrow-return-right text-primary me-2"></i>
                                                @Html.LabelFor(model => model.ExplainBeenEvicted, new { @class = "form-label fw-bold mb-0 text-dark" })
                                            </div>
                                            @Html.EditorFor(model => model.ExplainBeenEvicted, new { htmlAttributes = new { @class = "form-control form-control-lg" } })
                                            @Html.ValidationMessageFor(model => model.ExplainBeenEvicted, "", new { @class = "text-danger mt-1" })
                                        </div>
                                    </div>
                                </div>

                                <!-- Marijuana Card -->
                                <div class="row mb-4 align-items-center">
                                    <div class="col-md-9">
                                        @Html.LabelFor(model => model.MarijuanaCard, new { @class = "form-label fw-bold text-dark" })
                                        @Html.ValidationMessageFor(model => model.MarijuanaCard, "", new { @class = "text-danger d-block mt-1" })
                                    </div>
                                    <div class="col-md-3">
                                        @Html.DropDownListFor(model => model.MarijuanaCard, Html.GetEnumSelectList<YesNo>(), "-", new { @class = "form-control form-control-lg" })
                                    </div>
                                </div>

                                <!-- Has Smokers -->
                                <div class="mb-4 smokers-section">
                                    <!-- Smokers question header -->
                                    <div class="row mb-3 align-items-center">
                                        <div class="col-md-9">
                                            @Html.LabelFor(model => model.Smokers, new { @class = "form-label fw-bold text-dark" })
                                            @Html.ValidationMessageFor(model => model.Smokers, "", new { @class = "text-danger d-block mt-1" })
                                        </div>
                                        <div class="col-md-3">
                                            @Html.DropDownListFor(model => model.Smokers, Html.GetEnumSelectList<YesNo>(), "-", new { @visibletogglefor = nameof(Model.Smokers), @class = "yesno_visible_toggle form-control form-control-lg" })
                                        </div>
                                    </div>

                                    <!-- Smokers count field -->
                                    <div id="@nameof(Model.Smokers)" @(Model.Smokers == YesNo.Yes ? "" : "style=display:none;") class="smokers-details ms-4 ps-3 border-start border-primary">
                                        <div class="mb-2">
                                            <div class="d-flex align-items-center mb-2">
                                                <i class="bi bi-arrow-return-right text-primary me-2"></i>
                                                @Html.LabelFor(model => model.SmokersCount, new { @class = "form-label fw-bold mb-0 text-dark" })
                                            </div>
                                            @Html.EditorFor(model => model.SmokersCount, new { htmlAttributes = new { @class = "form-control form-control-lg" } })
                                            @Html.ValidationMessageFor(model => model.SmokersCount, "", new { @class = "text-danger mt-1" })
                                        </div>
                                    </div>
                                </div>

                                <!-- Has Drinkers -->
                                <div class="mb-4 drinkers-section">
                                    <!-- Drinkers question header -->
                                    <div class="row mb-3 align-items-center">
                                        <div class="col-md-9">
                                            @Html.LabelFor(model => model.Drinkers, new { @class = "form-label fw-bold text-dark" })
                                            @Html.ValidationMessageFor(model => model.Drinkers, "", new { @class = "text-danger d-block mt-1" })
                                        </div>
                                        <div class="col-md-3">
                                            @Html.DropDownListFor(model => model.Drinkers, Html.GetEnumSelectList<YesNo>(), "-", new { @visibletogglefor = nameof(Model.Drinkers), @class = "yesno_visible_toggle form-control form-control-lg" })
                                        </div>
                                    </div>

                                    <!-- How Often Drink field -->
                                    <div id="@nameof(Model.Drinkers)" @(Model.Drinkers == YesNo.Yes ? "" : "style=display:none;") class="drinkers-details ms-4 ps-3 border-start border-primary">
                                        <div class="mb-2">
                                            <div class="d-flex align-items-center mb-2">
                                                <i class="bi bi-arrow-return-right text-primary me-2"></i>
                                                @Html.LabelFor(model => model.HowOftenDrink, new { @class = "form-label fw-bold mb-0 text-dark" })
                                            </div>
                                            @Html.DropDownListFor(model => model.HowOftenDrink, Html.GetEnumSelectList<HowOften>(), "-", new { @class = "form-control form-control-lg" })
                                            @Html.ValidationMessageFor(model => model.HowOftenDrink, "", new { @class = "text-danger mt-1" })
                                        </div>
                                    </div>
                                </div>

                                <!-- Has Pets -->
                                <div class="mb-4 pet-section">
                                    <!-- Pet question header -->
                                    <div class="row mb-3 align-items-center">
                                        <div class="col-md-9">
                                            @Html.LabelFor(model => model.AnyPets, new { @class = "form-label fw-bold text-dark" })
                                            @Html.ValidationMessageFor(model => model.AnyPets, "", new { @class = "text-danger d-block mt-1" })
                                        </div>
                                        <div class="col-md-3">
                                            @Html.DropDownListFor(model => model.AnyPets, Html.GetEnumSelectList<YesNo>(), "-", new { @visibletogglefor = nameof(Model.AnyPets), @class = "yesno_visible_toggle form-control form-control-lg" })
                                        </div>
                                    </div>

                                    <!-- Pet -->
                                    <div id="@nameof(Model.AnyPets)" @(Model.AnyPets == YesNo.Yes ? "" : "style=display:none;") class="pet-details ms-4 ps-3 border-start border-primary">
                                        <div class="mb-2">
                                            <div class="d-flex align-items-center mb-2">
                                                <i class="bi bi-arrow-return-right text-primary me-2"></i>
                                                @Html.LabelFor(model => model.DescribePets, new { @class = "form-label fw-bold mb-0 text-dark" })
                                            </div>
                                            @Html.EditorFor(model => model.DescribePets, new { htmlAttributes = new { @class = "form-control form-control-lg" } })
                                            @Html.ValidationMessageFor(model => model.DescribePets, "", new { @class = "text-danger mt-1" })
                                        </div>
                                    </div>
                                </div>

                                <!-- Any Non Human -->
                                <div class="mb-4 non-human-section">
                                    <!-- Non Human question header -->
                                    <div class="row mb-3 align-items-center">
                                        <div class="col-md-9">
                                            @Html.LabelFor(model => model.AnyNonHuman, new { @class = "form-label fw-bold text-dark" })
                                            @Html.ValidationMessageFor(model => model.AnyNonHuman, "", new { @class = "text-danger d-block mt-1" })
                                        </div>
                                        <div class="col-md-3">
                                            @Html.DropDownListFor(model => model.AnyNonHuman, Html.GetEnumSelectList<YesNo>(), "-", new { @visibletogglefor = nameof(Model.AnyNonHuman), @class = "yesno_visible_toggle form-control form-control-lg" })
                                        </div>
                                    </div>

                                    <!-- Non Human -->
                                    <div id="@nameof(Model.AnyNonHuman)" @(Model.AnyNonHuman == YesNo.Yes ? "" : "style=display:none;") class="non-human-details ms-4 ps-3 border-start border-primary">
                                        <div class="mb-2">
                                            <div class="d-flex align-items-center mb-2">
                                                <i class="bi bi-arrow-return-right text-primary me-2"></i>
                                                @Html.LabelFor(model => model.DescribeNonHuman, new { @class = "form-label fw-bold mb-0 text-dark" })
                                            </div>
                                            @Html.EditorFor(model => model.DescribeNonHuman, new { htmlAttributes = new { @class = "form-control form-control-lg" } })
                                            @Html.ValidationMessageFor(model => model.DescribeNonHuman, "", new { @class = "text-danger mt-1" })
                                        </div>
                                    </div>
                                </div>

                                <!-- Attend College -->
                                <div class="mb-4 college-section">
                                    <div class="row mb-3 align-items-center">
                                        <div class="col-md-9">
                                            @Html.LabelFor(model => model.AttendCollege, new { @class = "form-label fw-bold text-dark" })
                                            @Html.ValidationMessageFor(model => model.AttendCollege, "", new { @class = "text-danger d-block mt-1" })
                                        </div>
                                        <div class="col-md-3">
                                            @Html.DropDownListFor(model => model.AttendCollege, Html.GetEnumSelectList<YesNo>(), "-", new { @visibletogglefor = nameof(Model.AttendCollege), @class = "yesno_visible_toggle form-control form-control-lg" })
                                        </div>
                                    </div>

                                    <div id="@nameof(Model.AttendCollege)" @(Model.AttendCollege == YesNo.Yes ? "" : "style=display:none;") class="college-details ms-4 ps-3 border-start border-primary">
                                        <div class="mb-3">
                                            <div class="d-flex align-items-center mb-2">
                                                <i class="bi bi-arrow-return-right text-primary me-2"></i>
                                                @Html.LabelFor(model => model.CollegeYearsAttended, new { @class = "form-label fw-bold mb-0 text-dark" })
                                            </div>
                                            @Html.EditorFor(model => model.CollegeYearsAttended, new { htmlAttributes = new { @class = "form-control form-control-lg" } })
                                            @Html.ValidationMessageFor(model => model.CollegeYearsAttended, "", new { @class = "text-danger mt-1" })
                                        </div>

                                        <div class="mb-2">
                                            <div class="d-flex align-items-center mb-2">
                                                <i class="bi bi-arrow-return-right text-primary me-2"></i>
                                                @Html.LabelFor(model => model.PlanToGraduate, new { @class = "form-label fw-bold mb-0 text-dark" })
                                            </div>
                                            @Html.EditorFor(model => model.PlanToGraduate, new { htmlAttributes = new { @class = "form-control form-control-lg" } })
                                            @Html.ValidationMessageFor(model => model.PlanToGraduate, "", new { @class = "text-danger mt-1" })
                                        </div>
                                    </div>
                                </div>

                                <!-- Need Reasonable Accommodation -->
                                <div class="mb-4 accommodation-section">
                                    <div class="row mb-3 align-items-center">
                                        <div class="col-md-9">
                                            @Html.LabelFor(model => model.NeedReasonableAccommodation, new { @class = "form-label fw-bold text-dark" })
                                            @Html.ValidationMessageFor(model => model.NeedReasonableAccommodation, "", new { @class = "text-danger d-block mt-1" })
                                        </div>
                                        <div class="col-md-3">
                                            @Html.DropDownListFor(model => model.NeedReasonableAccommodation, Html.GetEnumSelectList<YesNo>(), "-", new { @visibletogglefor = nameof(Model.NeedReasonableAccommodation), @class = "yesno_visible_toggle form-control form-control-lg" })
                                        </div>
                                    </div>

                                    <!-- Accommodation Description -->
                                    <div id="@nameof(Model.NeedReasonableAccommodation)" @(Model.NeedReasonableAccommodation == YesNo.Yes ? "" : "style=display:none;") class="accommodation-details ms-4 ps-3 border-start border-primary">
                                        <div class="mb-2">
                                            <div class="d-flex align-items-center mb-2">
                                                <i class="bi bi-arrow-return-right text-primary me-2"></i>
                                                @Html.LabelFor(model => model.DescribeReasonableAccommodation, new { @class = "form-label fw-bold mb-0 text-dark" })
                                            </div>
                                            @Html.EditorFor(model => model.DescribeReasonableAccommodation, new { htmlAttributes = new { @class = "form-control form-control-lg" } })
                                            @Html.ValidationMessageFor(model => model.DescribeReasonableAccommodation, "", new { @class = "text-danger mt-1" })
                                        </div>
                                    </div>
                                </div>

                                <!-- Consider Other Income -->
                                <div class="other-income-section">
                                    <div class="row mb-3 align-items-center">
                                        <div class="col-md-9">
                                            @Html.LabelFor(model => model.ConsiderOtherIncome, new { @class = "form-label fw-bold text-dark" })
                                            @Html.ValidationMessageFor(model => model.ConsiderOtherIncome, "", new { @class = "text-danger d-block mt-1" })
                                        </div>
                                        <div class="col-md-3">
                                            @Html.DropDownListFor(model => model.ConsiderOtherIncome, Html.GetEnumSelectList<YesNo>(), "-", new { @visibletogglefor = nameof(Model.OtherIncomeExplain), @class = "yesno_visible_toggle form-control form-control-lg" })
                                        </div>
                                    </div>

                                    <!-- Other Income -->
                                    <div id="@nameof(Model.OtherIncomeExplain)" @(Model.ConsiderOtherIncome == YesNo.Yes ? "" : "style=display:none;") class="other-income-details ms-4 ps-3 border-start border-primary">
                                        <div class="mb-2">
                                            <div class="d-flex align-items-center mb-2">
                                                <i class="bi bi-arrow-return-right text-primary me-2"></i>
                                                @Html.LabelFor(model => model.OtherIncomeExplain, new { @class = "form-label fw-bold mb-0 text-dark" })
                                            </div>
                                            @Html.EditorFor(model => model.OtherIncomeExplain, new { htmlAttributes = new { @class = "form-control form-control-lg" } })
                                            @Html.ValidationMessageFor(model => model.OtherIncomeExplain, "", new { @class = "text-danger mt-1" })
                                        </div>
                                    </div>
                                </div>

                                <!-- Additional Comments -->
                                <div class="mb-4">
                                    @Html.LabelFor(model => model.AdditionalComments, new { @class = "form-label fw-bold text-dark" })
                                    @Html.TextAreaFor(model => model.AdditionalComments, new { @class = "form-control form-control-lg", rows = "4" })
                                    @Html.ValidationMessageFor(model => model.AdditionalComments, "", new { @class = "text-danger mt-1" })
                                </div>
                            </div>
                        </div>

                        <!-- Certification And Authorization -->
                        <div class="card mb-5">
                            <div class="card-header bg-light py-3">
                                <h5 class="mb-0 text-center">Certification And Authorization</h5>
                            </div>
                            <div class="card-body pt-4">
                                <div class="mb-4">
                                    <div class="form-check">
                                        <!-- Correct unobtrusive attributes for custom MustBeTrue validator -->
                                        <input type="checkbox" id="AcceptedTerms" name="AcceptedTerms" value="true" class="form-check-input" @(Model.AcceptedTerms ? "checked" : "") data-val="true" data-val-mustbetrue="You must agree to the terms and conditions" />
                                        @Html.LabelFor(m => m.AcceptedTerms, new { @class = "form-check-label fw-bold" })
                                    </div>
                                    @Html.ValidationMessageFor(m => m.AcceptedTerms, "", new { @class = "text-danger mt-1 d-block" })
                                </div>
                                <div class="mb-3">
                                    <p id="certification-text">I (we), <span id="applicant-name"></span>, certify that the statements contained herein are true and correct. Misrepresentations contained herein shall constitute grounds for lease revocation. I hereby verify that I am old enough to legally sign and be fully responsible for the terms of the Lease Agreement. Each applicant hereby authorizes the Landlord or rental agent and their representative to contact any persons, corporations, employers, agencies, offices, groups or organizations to obtain any information and material which is deemed necessary to verify the information in this application. In the event the application is approved and I/We desire to lease the premises, each applicant agrees to fill out, sign, and abide by the rental/lease agreement. Each applicant understands and agrees that all adults whom reside on the premises shall be jointly-severally liable for all rent and damage incurred during the term of the Lease Agreement.</p>
                                </div>
                            </div>
                        </div>

                        <!-- Submit button -->
                        <div class="d-grid gap-2 col-md-6 col-lg-4 mx-auto">
                            <button type="submit" class="btn btn-primary btn-lg py-3">Submit Application</button>
                        </div>
                    }

                    <!-- Contact us note -->
                    <div class="text-center text-muted mt-4">
                        <p class="mb-0 small">If you have any questions about this application, please <a href="@Url.Action(nameof(HomeController.ContactUs), HomeController.Name)" class="text-primary">contact us</a>.</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>